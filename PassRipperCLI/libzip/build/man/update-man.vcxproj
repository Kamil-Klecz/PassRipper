<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{966860F3-A8A6-3796-B124-97C50495D2DB}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>update-man</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\ZIP_SOURCE_GET_ARGS.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ZIP_SOURCE_GET_ARGS.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/ZIP_SOURCE_GET_ARGS.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/ZIP_SOURCE_GET_ARGS.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/ZIP_SOURCE_GET_ARGS.man E:/GitHub_Repos_E/libzip/man/ZIP_SOURCE_GET_ARGS.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\ZIP_SOURCE_GET_ARGS.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\ZIP_SOURCE_GET_ARGS.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ZIP_SOURCE_GET_ARGS.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/ZIP_SOURCE_GET_ARGS.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/ZIP_SOURCE_GET_ARGS.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/ZIP_SOURCE_GET_ARGS.man E:/GitHub_Repos_E/libzip/man/ZIP_SOURCE_GET_ARGS.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\ZIP_SOURCE_GET_ARGS.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\ZIP_SOURCE_GET_ARGS.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ZIP_SOURCE_GET_ARGS.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/ZIP_SOURCE_GET_ARGS.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/ZIP_SOURCE_GET_ARGS.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/ZIP_SOURCE_GET_ARGS.man E:/GitHub_Repos_E/libzip/man/ZIP_SOURCE_GET_ARGS.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\ZIP_SOURCE_GET_ARGS.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\ZIP_SOURCE_GET_ARGS.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ZIP_SOURCE_GET_ARGS.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/ZIP_SOURCE_GET_ARGS.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/ZIP_SOURCE_GET_ARGS.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/ZIP_SOURCE_GET_ARGS.man E:/GitHub_Repos_E/libzip/man/ZIP_SOURCE_GET_ARGS.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\ZIP_SOURCE_GET_ARGS.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\ZIP_SOURCE_GET_ARGS.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\libzip.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating libzip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/libzip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/libzip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/libzip.man E:/GitHub_Repos_E/libzip/man/libzip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\libzip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\libzip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating libzip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/libzip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/libzip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/libzip.man E:/GitHub_Repos_E/libzip/man/libzip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\libzip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\libzip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating libzip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/libzip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/libzip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/libzip.man E:/GitHub_Repos_E/libzip/man/libzip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\libzip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\libzip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating libzip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/libzip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/libzip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/libzip.man E:/GitHub_Repos_E/libzip/man/libzip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\libzip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\libzip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip.man E:/GitHub_Repos_E/libzip/man/zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip.man E:/GitHub_Repos_E/libzip/man/zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip.man E:/GitHub_Repos_E/libzip/man/zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip.man E:/GitHub_Repos_E/libzip/man/zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_add.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_add.man E:/GitHub_Repos_E/libzip/man/zip_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_add.man E:/GitHub_Repos_E/libzip/man/zip_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_add.man E:/GitHub_Repos_E/libzip/man/zip_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_add.man E:/GitHub_Repos_E/libzip/man/zip_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_add_dir.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_add_dir.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_add_dir.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_add_dir.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_add_dir.man E:/GitHub_Repos_E/libzip/man/zip_add_dir.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_add_dir.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_add_dir.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_add_dir.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_add_dir.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_add_dir.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_add_dir.man E:/GitHub_Repos_E/libzip/man/zip_add_dir.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_add_dir.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_add_dir.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_add_dir.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_add_dir.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_add_dir.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_add_dir.man E:/GitHub_Repos_E/libzip/man/zip_add_dir.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_add_dir.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_add_dir.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_add_dir.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_add_dir.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_add_dir.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_add_dir.man E:/GitHub_Repos_E/libzip/man/zip_add_dir.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_add_dir.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_add_dir.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_close.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_close.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_close.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_close.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_close.man E:/GitHub_Repos_E/libzip/man/zip_close.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_close.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_close.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_close.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_close.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_close.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_close.man E:/GitHub_Repos_E/libzip/man/zip_close.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_close.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_close.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_close.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_close.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_close.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_close.man E:/GitHub_Repos_E/libzip/man/zip_close.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_close.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_close.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_close.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_close.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_close.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_close.man E:/GitHub_Repos_E/libzip/man/zip_close.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_close.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_close.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_compression_method_supported.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_compression_method_supported.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_compression_method_supported.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_compression_method_supported.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_compression_method_supported.man E:/GitHub_Repos_E/libzip/man/zip_compression_method_supported.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_compression_method_supported.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_compression_method_supported.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_compression_method_supported.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_compression_method_supported.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_compression_method_supported.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_compression_method_supported.man E:/GitHub_Repos_E/libzip/man/zip_compression_method_supported.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_compression_method_supported.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_compression_method_supported.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_compression_method_supported.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_compression_method_supported.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_compression_method_supported.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_compression_method_supported.man E:/GitHub_Repos_E/libzip/man/zip_compression_method_supported.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_compression_method_supported.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_compression_method_supported.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_compression_method_supported.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_compression_method_supported.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_compression_method_supported.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_compression_method_supported.man E:/GitHub_Repos_E/libzip/man/zip_compression_method_supported.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_compression_method_supported.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_compression_method_supported.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_delete.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_delete.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_delete.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_delete.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_delete.man E:/GitHub_Repos_E/libzip/man/zip_delete.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_delete.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_delete.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_delete.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_delete.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_delete.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_delete.man E:/GitHub_Repos_E/libzip/man/zip_delete.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_delete.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_delete.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_delete.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_delete.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_delete.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_delete.man E:/GitHub_Repos_E/libzip/man/zip_delete.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_delete.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_delete.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_delete.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_delete.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_delete.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_delete.man E:/GitHub_Repos_E/libzip/man/zip_delete.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_delete.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_delete.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_dir_add.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_dir_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_dir_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_dir_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_dir_add.man E:/GitHub_Repos_E/libzip/man/zip_dir_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_dir_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_dir_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_dir_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_dir_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_dir_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_dir_add.man E:/GitHub_Repos_E/libzip/man/zip_dir_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_dir_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_dir_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_dir_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_dir_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_dir_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_dir_add.man E:/GitHub_Repos_E/libzip/man/zip_dir_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_dir_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_dir_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_dir_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_dir_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_dir_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_dir_add.man E:/GitHub_Repos_E/libzip/man/zip_dir_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_dir_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_dir_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_discard.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_discard.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_discard.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_discard.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_discard.man E:/GitHub_Repos_E/libzip/man/zip_discard.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_discard.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_discard.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_discard.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_discard.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_discard.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_discard.man E:/GitHub_Repos_E/libzip/man/zip_discard.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_discard.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_discard.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_discard.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_discard.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_discard.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_discard.man E:/GitHub_Repos_E/libzip/man/zip_discard.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_discard.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_discard.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_discard.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_discard.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_discard.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_discard.man E:/GitHub_Repos_E/libzip/man/zip_discard.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_discard.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_discard.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_encryption_method_supported.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_encryption_method_supported.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_encryption_method_supported.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_encryption_method_supported.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_encryption_method_supported.man E:/GitHub_Repos_E/libzip/man/zip_encryption_method_supported.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_encryption_method_supported.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_encryption_method_supported.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_encryption_method_supported.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_encryption_method_supported.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_encryption_method_supported.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_encryption_method_supported.man E:/GitHub_Repos_E/libzip/man/zip_encryption_method_supported.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_encryption_method_supported.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_encryption_method_supported.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_encryption_method_supported.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_encryption_method_supported.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_encryption_method_supported.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_encryption_method_supported.man E:/GitHub_Repos_E/libzip/man/zip_encryption_method_supported.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_encryption_method_supported.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_encryption_method_supported.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_encryption_method_supported.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_encryption_method_supported.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_encryption_method_supported.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_encryption_method_supported.man E:/GitHub_Repos_E/libzip/man/zip_encryption_method_supported.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_encryption_method_supported.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_encryption_method_supported.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error.man E:/GitHub_Repos_E/libzip/man/zip_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error.man E:/GitHub_Repos_E/libzip/man/zip_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error.man E:/GitHub_Repos_E/libzip/man/zip_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error.man E:/GitHub_Repos_E/libzip/man/zip_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_clear.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_clear.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_clear.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_clear.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_clear.man E:/GitHub_Repos_E/libzip/man/zip_error_clear.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_clear.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_clear.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_clear.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_clear.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_clear.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_clear.man E:/GitHub_Repos_E/libzip/man/zip_error_clear.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_clear.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_clear.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_clear.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_clear.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_clear.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_clear.man E:/GitHub_Repos_E/libzip/man/zip_error_clear.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_clear.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_clear.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_clear.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_clear.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_clear.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_clear.man E:/GitHub_Repos_E/libzip/man/zip_error_clear.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_clear.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_clear.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_code_system.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_code_system.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_code_system.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_code_system.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_code_system.man E:/GitHub_Repos_E/libzip/man/zip_error_code_system.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_code_system.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_code_system.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_code_system.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_code_system.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_code_system.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_code_system.man E:/GitHub_Repos_E/libzip/man/zip_error_code_system.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_code_system.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_code_system.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_code_system.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_code_system.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_code_system.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_code_system.man E:/GitHub_Repos_E/libzip/man/zip_error_code_system.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_code_system.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_code_system.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_code_system.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_code_system.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_code_system.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_code_system.man E:/GitHub_Repos_E/libzip/man/zip_error_code_system.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_code_system.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_code_system.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_code_zip.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_code_zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_code_zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_code_zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_code_zip.man E:/GitHub_Repos_E/libzip/man/zip_error_code_zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_code_zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_code_zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_code_zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_code_zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_code_zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_code_zip.man E:/GitHub_Repos_E/libzip/man/zip_error_code_zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_code_zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_code_zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_code_zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_code_zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_code_zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_code_zip.man E:/GitHub_Repos_E/libzip/man/zip_error_code_zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_code_zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_code_zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_code_zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_code_zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_code_zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_code_zip.man E:/GitHub_Repos_E/libzip/man/zip_error_code_zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_code_zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_code_zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_fini.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_fini.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_fini.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_fini.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_fini.man E:/GitHub_Repos_E/libzip/man/zip_error_fini.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_fini.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_fini.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_fini.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_fini.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_fini.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_fini.man E:/GitHub_Repos_E/libzip/man/zip_error_fini.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_fini.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_fini.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_fini.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_fini.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_fini.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_fini.man E:/GitHub_Repos_E/libzip/man/zip_error_fini.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_fini.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_fini.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_fini.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_fini.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_fini.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_fini.man E:/GitHub_Repos_E/libzip/man/zip_error_fini.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_fini.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_fini.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_get.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_get.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_get.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_get.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_get.man E:/GitHub_Repos_E/libzip/man/zip_error_get.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_get.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_get.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_get.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_get.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_get.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_get.man E:/GitHub_Repos_E/libzip/man/zip_error_get.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_get.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_get.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_get.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_get.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_get.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_get.man E:/GitHub_Repos_E/libzip/man/zip_error_get.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_get.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_get.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_get.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_get.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_get.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_get.man E:/GitHub_Repos_E/libzip/man/zip_error_get.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_get.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_get.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_get_sys_type.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_get_sys_type.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_get_sys_type.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_get_sys_type.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_get_sys_type.man E:/GitHub_Repos_E/libzip/man/zip_error_get_sys_type.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_get_sys_type.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_get_sys_type.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_get_sys_type.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_get_sys_type.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_get_sys_type.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_get_sys_type.man E:/GitHub_Repos_E/libzip/man/zip_error_get_sys_type.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_get_sys_type.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_get_sys_type.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_get_sys_type.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_get_sys_type.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_get_sys_type.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_get_sys_type.man E:/GitHub_Repos_E/libzip/man/zip_error_get_sys_type.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_get_sys_type.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_get_sys_type.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_get_sys_type.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_get_sys_type.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_get_sys_type.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_get_sys_type.man E:/GitHub_Repos_E/libzip/man/zip_error_get_sys_type.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_get_sys_type.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_get_sys_type.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_init.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_init.man E:/GitHub_Repos_E/libzip/man/zip_error_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_init.man E:/GitHub_Repos_E/libzip/man/zip_error_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_init.man E:/GitHub_Repos_E/libzip/man/zip_error_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_init.man E:/GitHub_Repos_E/libzip/man/zip_error_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_set.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_set.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_set.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_set.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_set.man E:/GitHub_Repos_E/libzip/man/zip_error_set.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_set.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_set.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_set.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_set.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_set.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_set.man E:/GitHub_Repos_E/libzip/man/zip_error_set.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_set.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_set.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_set.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_set.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_set.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_set.man E:/GitHub_Repos_E/libzip/man/zip_error_set.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_set.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_set.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_set.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_set.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_set.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_set.man E:/GitHub_Repos_E/libzip/man/zip_error_set.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_set.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_set.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_set_from_source.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_set_from_source.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_set_from_source.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_set_from_source.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_set_from_source.man E:/GitHub_Repos_E/libzip/man/zip_error_set_from_source.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_set_from_source.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_set_from_source.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_set_from_source.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_set_from_source.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_set_from_source.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_set_from_source.man E:/GitHub_Repos_E/libzip/man/zip_error_set_from_source.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_set_from_source.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_set_from_source.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_set_from_source.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_set_from_source.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_set_from_source.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_set_from_source.man E:/GitHub_Repos_E/libzip/man/zip_error_set_from_source.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_set_from_source.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_set_from_source.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_set_from_source.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_set_from_source.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_set_from_source.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_set_from_source.man E:/GitHub_Repos_E/libzip/man/zip_error_set_from_source.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_set_from_source.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_set_from_source.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_strerror.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_strerror.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_strerror.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_strerror.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_strerror.man E:/GitHub_Repos_E/libzip/man/zip_error_strerror.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_strerror.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_strerror.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_strerror.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_strerror.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_strerror.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_strerror.man E:/GitHub_Repos_E/libzip/man/zip_error_strerror.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_strerror.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_strerror.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_strerror.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_strerror.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_strerror.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_strerror.man E:/GitHub_Repos_E/libzip/man/zip_error_strerror.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_strerror.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_strerror.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_strerror.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_strerror.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_strerror.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_strerror.man E:/GitHub_Repos_E/libzip/man/zip_error_strerror.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_strerror.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_strerror.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_system_type.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_system_type.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_system_type.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_system_type.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_system_type.man E:/GitHub_Repos_E/libzip/man/zip_error_system_type.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_system_type.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_system_type.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_system_type.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_system_type.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_system_type.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_system_type.man E:/GitHub_Repos_E/libzip/man/zip_error_system_type.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_system_type.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_system_type.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_system_type.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_system_type.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_system_type.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_system_type.man E:/GitHub_Repos_E/libzip/man/zip_error_system_type.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_system_type.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_system_type.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_system_type.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_system_type.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_system_type.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_system_type.man E:/GitHub_Repos_E/libzip/man/zip_error_system_type.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_system_type.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_system_type.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_to_data.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_to_data.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_to_data.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_to_data.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_to_data.man E:/GitHub_Repos_E/libzip/man/zip_error_to_data.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_to_data.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_to_data.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_to_data.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_to_data.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_to_data.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_to_data.man E:/GitHub_Repos_E/libzip/man/zip_error_to_data.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_to_data.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_to_data.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_to_data.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_to_data.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_to_data.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_to_data.man E:/GitHub_Repos_E/libzip/man/zip_error_to_data.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_to_data.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_to_data.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_to_data.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_to_data.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_to_data.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_to_data.man E:/GitHub_Repos_E/libzip/man/zip_error_to_data.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_to_data.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_to_data.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_error_to_str.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_error_to_str.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_to_str.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_to_str.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_to_str.man E:/GitHub_Repos_E/libzip/man/zip_error_to_str.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_to_str.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_to_str.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_error_to_str.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_to_str.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_to_str.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_to_str.man E:/GitHub_Repos_E/libzip/man/zip_error_to_str.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_to_str.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_to_str.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_error_to_str.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_to_str.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_to_str.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_to_str.man E:/GitHub_Repos_E/libzip/man/zip_error_to_str.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_to_str.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_to_str.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_error_to_str.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_error_to_str.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_error_to_str.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_error_to_str.man E:/GitHub_Repos_E/libzip/man/zip_error_to_str.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_error_to_str.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_error_to_str.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_errors.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_errors.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_errors.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_errors.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_errors.man E:/GitHub_Repos_E/libzip/man/zip_errors.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_errors.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_errors.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_errors.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_errors.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_errors.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_errors.man E:/GitHub_Repos_E/libzip/man/zip_errors.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_errors.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_errors.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_errors.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_errors.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_errors.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_errors.man E:/GitHub_Repos_E/libzip/man/zip_errors.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_errors.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_errors.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_errors.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_errors.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_errors.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_errors.man E:/GitHub_Repos_E/libzip/man/zip_errors.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_errors.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_errors.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_fclose.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_fclose.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fclose.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fclose.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fclose.man E:/GitHub_Repos_E/libzip/man/zip_fclose.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_fclose.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fclose.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_fclose.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fclose.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fclose.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fclose.man E:/GitHub_Repos_E/libzip/man/zip_fclose.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_fclose.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fclose.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_fclose.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fclose.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fclose.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fclose.man E:/GitHub_Repos_E/libzip/man/zip_fclose.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_fclose.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fclose.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_fclose.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fclose.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fclose.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fclose.man E:/GitHub_Repos_E/libzip/man/zip_fclose.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_fclose.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fclose.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_fdopen.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_fdopen.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fdopen.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fdopen.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fdopen.man E:/GitHub_Repos_E/libzip/man/zip_fdopen.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_fdopen.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fdopen.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_fdopen.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fdopen.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fdopen.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fdopen.man E:/GitHub_Repos_E/libzip/man/zip_fdopen.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_fdopen.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fdopen.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_fdopen.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fdopen.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fdopen.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fdopen.man E:/GitHub_Repos_E/libzip/man/zip_fdopen.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_fdopen.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fdopen.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_fdopen.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fdopen.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fdopen.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fdopen.man E:/GitHub_Repos_E/libzip/man/zip_fdopen.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_fdopen.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fdopen.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file.man E:/GitHub_Repos_E/libzip/man/zip_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file.man E:/GitHub_Repos_E/libzip/man/zip_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file.man E:/GitHub_Repos_E/libzip/man/zip_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file.man E:/GitHub_Repos_E/libzip/man/zip_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_add.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_add.man E:/GitHub_Repos_E/libzip/man/zip_file_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_add.man E:/GitHub_Repos_E/libzip/man/zip_file_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_add.man E:/GitHub_Repos_E/libzip/man/zip_file_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_add.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_add.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_add.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_add.man E:/GitHub_Repos_E/libzip/man/zip_file_add.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_add.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_add.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_attributes_init.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_attributes_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_attributes_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_attributes_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_attributes_init.man E:/GitHub_Repos_E/libzip/man/zip_file_attributes_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_attributes_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_attributes_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_attributes_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_attributes_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_attributes_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_attributes_init.man E:/GitHub_Repos_E/libzip/man/zip_file_attributes_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_attributes_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_attributes_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_attributes_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_attributes_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_attributes_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_attributes_init.man E:/GitHub_Repos_E/libzip/man/zip_file_attributes_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_attributes_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_attributes_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_attributes_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_attributes_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_attributes_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_attributes_init.man E:/GitHub_Repos_E/libzip/man/zip_file_attributes_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_attributes_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_attributes_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_extra_field_delete.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_extra_field_delete.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_delete.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_delete.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_delete.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_delete.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_delete.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_delete.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_extra_field_delete.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_delete.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_delete.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_delete.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_delete.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_delete.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_delete.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_extra_field_delete.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_delete.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_delete.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_delete.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_delete.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_delete.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_delete.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_extra_field_delete.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_delete.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_delete.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_delete.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_delete.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_delete.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_delete.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_extra_field_get.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_extra_field_get.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_get.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_get.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_get.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_get.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_get.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_get.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_extra_field_get.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_get.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_get.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_get.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_get.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_get.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_get.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_extra_field_get.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_get.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_get.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_get.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_get.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_get.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_get.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_extra_field_get.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_get.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_get.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_get.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_get.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_get.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_get.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_extra_field_set.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_extra_field_set.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_set.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_set.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_set.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_set.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_set.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_set.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_extra_field_set.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_set.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_set.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_set.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_set.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_set.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_set.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_extra_field_set.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_set.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_set.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_set.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_set.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_set.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_set.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_extra_field_set.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_set.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_set.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_field_set.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_field_set.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_field_set.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_set.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_extra_fields_count.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_extra_fields_count.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_fields_count.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_fields_count.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_fields_count.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_fields_count.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_fields_count.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_fields_count.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_extra_fields_count.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_fields_count.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_fields_count.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_fields_count.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_fields_count.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_fields_count.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_fields_count.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_extra_fields_count.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_fields_count.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_fields_count.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_fields_count.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_fields_count.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_fields_count.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_fields_count.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_extra_fields_count.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_extra_fields_count.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_fields_count.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_extra_fields_count.man E:/GitHub_Repos_E/libzip/man/zip_file_extra_fields_count.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_extra_fields_count.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_fields_count.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_get_comment.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_get_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_comment.man E:/GitHub_Repos_E/libzip/man/zip_file_get_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_get_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_comment.man E:/GitHub_Repos_E/libzip/man/zip_file_get_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_get_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_comment.man E:/GitHub_Repos_E/libzip/man/zip_file_get_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_get_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_comment.man E:/GitHub_Repos_E/libzip/man/zip_file_get_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_get_error.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_get_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_error.man E:/GitHub_Repos_E/libzip/man/zip_file_get_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_get_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_error.man E:/GitHub_Repos_E/libzip/man/zip_file_get_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_get_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_error.man E:/GitHub_Repos_E/libzip/man/zip_file_get_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_get_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_error.man E:/GitHub_Repos_E/libzip/man/zip_file_get_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_get_external_attributes.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_get_external_attributes.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_external_attributes.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_external_attributes.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_external_attributes.man E:/GitHub_Repos_E/libzip/man/zip_file_get_external_attributes.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_external_attributes.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_external_attributes.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_get_external_attributes.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_external_attributes.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_external_attributes.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_external_attributes.man E:/GitHub_Repos_E/libzip/man/zip_file_get_external_attributes.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_external_attributes.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_external_attributes.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_get_external_attributes.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_external_attributes.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_external_attributes.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_external_attributes.man E:/GitHub_Repos_E/libzip/man/zip_file_get_external_attributes.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_external_attributes.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_external_attributes.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_get_external_attributes.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_get_external_attributes.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_get_external_attributes.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_get_external_attributes.man E:/GitHub_Repos_E/libzip/man/zip_file_get_external_attributes.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_get_external_attributes.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_get_external_attributes.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_rename.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_rename.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_rename.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_rename.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_rename.man E:/GitHub_Repos_E/libzip/man/zip_file_rename.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_rename.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_rename.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_rename.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_rename.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_rename.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_rename.man E:/GitHub_Repos_E/libzip/man/zip_file_rename.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_rename.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_rename.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_rename.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_rename.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_rename.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_rename.man E:/GitHub_Repos_E/libzip/man/zip_file_rename.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_rename.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_rename.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_rename.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_rename.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_rename.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_rename.man E:/GitHub_Repos_E/libzip/man/zip_file_rename.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_rename.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_rename.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_set_comment.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_set_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_comment.man E:/GitHub_Repos_E/libzip/man/zip_file_set_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_set_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_comment.man E:/GitHub_Repos_E/libzip/man/zip_file_set_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_set_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_comment.man E:/GitHub_Repos_E/libzip/man/zip_file_set_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_set_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_comment.man E:/GitHub_Repos_E/libzip/man/zip_file_set_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_set_encryption.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_set_encryption.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_encryption.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_encryption.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_encryption.man E:/GitHub_Repos_E/libzip/man/zip_file_set_encryption.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_encryption.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_encryption.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_set_encryption.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_encryption.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_encryption.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_encryption.man E:/GitHub_Repos_E/libzip/man/zip_file_set_encryption.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_encryption.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_encryption.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_set_encryption.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_encryption.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_encryption.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_encryption.man E:/GitHub_Repos_E/libzip/man/zip_file_set_encryption.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_encryption.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_encryption.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_set_encryption.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_encryption.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_encryption.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_encryption.man E:/GitHub_Repos_E/libzip/man/zip_file_set_encryption.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_encryption.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_encryption.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_set_external_attributes.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_set_external_attributes.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_external_attributes.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_external_attributes.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_external_attributes.man E:/GitHub_Repos_E/libzip/man/zip_file_set_external_attributes.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_external_attributes.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_external_attributes.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_set_external_attributes.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_external_attributes.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_external_attributes.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_external_attributes.man E:/GitHub_Repos_E/libzip/man/zip_file_set_external_attributes.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_external_attributes.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_external_attributes.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_set_external_attributes.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_external_attributes.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_external_attributes.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_external_attributes.man E:/GitHub_Repos_E/libzip/man/zip_file_set_external_attributes.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_external_attributes.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_external_attributes.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_set_external_attributes.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_external_attributes.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_external_attributes.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_external_attributes.man E:/GitHub_Repos_E/libzip/man/zip_file_set_external_attributes.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_external_attributes.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_external_attributes.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_set_mtime.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_set_mtime.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_mtime.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_mtime.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_mtime.man E:/GitHub_Repos_E/libzip/man/zip_file_set_mtime.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_mtime.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_mtime.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_set_mtime.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_mtime.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_mtime.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_mtime.man E:/GitHub_Repos_E/libzip/man/zip_file_set_mtime.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_mtime.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_mtime.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_set_mtime.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_mtime.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_mtime.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_mtime.man E:/GitHub_Repos_E/libzip/man/zip_file_set_mtime.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_mtime.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_mtime.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_set_mtime.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_set_mtime.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_set_mtime.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_set_mtime.man E:/GitHub_Repos_E/libzip/man/zip_file_set_mtime.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_set_mtime.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_set_mtime.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_file_strerror.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_file_strerror.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_strerror.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_strerror.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_strerror.man E:/GitHub_Repos_E/libzip/man/zip_file_strerror.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_strerror.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_strerror.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_file_strerror.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_strerror.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_strerror.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_strerror.man E:/GitHub_Repos_E/libzip/man/zip_file_strerror.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_strerror.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_strerror.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_file_strerror.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_strerror.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_strerror.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_strerror.man E:/GitHub_Repos_E/libzip/man/zip_file_strerror.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_strerror.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_strerror.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_file_strerror.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_file_strerror.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_file_strerror.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_file_strerror.man E:/GitHub_Repos_E/libzip/man/zip_file_strerror.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_file_strerror.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_file_strerror.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_fopen.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_fopen.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fopen.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fopen.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fopen.man E:/GitHub_Repos_E/libzip/man/zip_fopen.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_fopen.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fopen.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_fopen.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fopen.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fopen.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fopen.man E:/GitHub_Repos_E/libzip/man/zip_fopen.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_fopen.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fopen.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_fopen.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fopen.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fopen.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fopen.man E:/GitHub_Repos_E/libzip/man/zip_fopen.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_fopen.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fopen.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_fopen.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fopen.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fopen.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fopen.man E:/GitHub_Repos_E/libzip/man/zip_fopen.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_fopen.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fopen.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_fopen_encrypted.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_fopen_encrypted.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fopen_encrypted.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fopen_encrypted.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fopen_encrypted.man E:/GitHub_Repos_E/libzip/man/zip_fopen_encrypted.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_fopen_encrypted.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fopen_encrypted.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_fopen_encrypted.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fopen_encrypted.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fopen_encrypted.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fopen_encrypted.man E:/GitHub_Repos_E/libzip/man/zip_fopen_encrypted.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_fopen_encrypted.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fopen_encrypted.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_fopen_encrypted.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fopen_encrypted.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fopen_encrypted.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fopen_encrypted.man E:/GitHub_Repos_E/libzip/man/zip_fopen_encrypted.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_fopen_encrypted.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fopen_encrypted.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_fopen_encrypted.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fopen_encrypted.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fopen_encrypted.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fopen_encrypted.man E:/GitHub_Repos_E/libzip/man/zip_fopen_encrypted.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_fopen_encrypted.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fopen_encrypted.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_fread.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_fread.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fread.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fread.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fread.man E:/GitHub_Repos_E/libzip/man/zip_fread.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_fread.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fread.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_fread.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fread.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fread.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fread.man E:/GitHub_Repos_E/libzip/man/zip_fread.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_fread.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fread.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_fread.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fread.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fread.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fread.man E:/GitHub_Repos_E/libzip/man/zip_fread.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_fread.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fread.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_fread.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fread.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fread.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fread.man E:/GitHub_Repos_E/libzip/man/zip_fread.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_fread.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fread.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_fseek.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_fseek.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fseek.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fseek.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fseek.man E:/GitHub_Repos_E/libzip/man/zip_fseek.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_fseek.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fseek.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_fseek.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fseek.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fseek.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fseek.man E:/GitHub_Repos_E/libzip/man/zip_fseek.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_fseek.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fseek.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_fseek.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fseek.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fseek.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fseek.man E:/GitHub_Repos_E/libzip/man/zip_fseek.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_fseek.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fseek.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_fseek.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_fseek.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_fseek.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_fseek.man E:/GitHub_Repos_E/libzip/man/zip_fseek.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_fseek.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_fseek.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_ftell.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_ftell.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_ftell.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_ftell.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_ftell.man E:/GitHub_Repos_E/libzip/man/zip_ftell.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_ftell.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_ftell.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_ftell.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_ftell.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_ftell.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_ftell.man E:/GitHub_Repos_E/libzip/man/zip_ftell.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_ftell.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_ftell.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_ftell.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_ftell.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_ftell.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_ftell.man E:/GitHub_Repos_E/libzip/man/zip_ftell.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_ftell.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_ftell.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_ftell.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_ftell.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_ftell.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_ftell.man E:/GitHub_Repos_E/libzip/man/zip_ftell.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_ftell.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_ftell.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_get_archive_comment.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_get_archive_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_archive_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_comment.man E:/GitHub_Repos_E/libzip/man/zip_get_archive_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_archive_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_get_archive_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_archive_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_comment.man E:/GitHub_Repos_E/libzip/man/zip_get_archive_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_archive_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_get_archive_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_archive_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_comment.man E:/GitHub_Repos_E/libzip/man/zip_get_archive_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_archive_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_get_archive_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_archive_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_comment.man E:/GitHub_Repos_E/libzip/man/zip_get_archive_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_archive_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_get_archive_flag.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_get_archive_flag.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_archive_flag.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_flag.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_flag.man E:/GitHub_Repos_E/libzip/man/zip_get_archive_flag.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_archive_flag.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_flag.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_get_archive_flag.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_archive_flag.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_flag.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_flag.man E:/GitHub_Repos_E/libzip/man/zip_get_archive_flag.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_archive_flag.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_flag.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_get_archive_flag.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_archive_flag.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_flag.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_flag.man E:/GitHub_Repos_E/libzip/man/zip_get_archive_flag.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_archive_flag.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_flag.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_get_archive_flag.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_archive_flag.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_flag.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_archive_flag.man E:/GitHub_Repos_E/libzip/man/zip_get_archive_flag.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_archive_flag.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_flag.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_get_error.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_get_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_error.man E:/GitHub_Repos_E/libzip/man/zip_get_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_get_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_error.man E:/GitHub_Repos_E/libzip/man/zip_get_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_get_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_error.man E:/GitHub_Repos_E/libzip/man/zip_get_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_get_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_error.man E:/GitHub_Repos_E/libzip/man/zip_get_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_get_file_comment.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_get_file_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_file_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_file_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_file_comment.man E:/GitHub_Repos_E/libzip/man/zip_get_file_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_file_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_file_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_get_file_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_file_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_file_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_file_comment.man E:/GitHub_Repos_E/libzip/man/zip_get_file_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_file_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_file_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_get_file_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_file_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_file_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_file_comment.man E:/GitHub_Repos_E/libzip/man/zip_get_file_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_file_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_file_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_get_file_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_file_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_file_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_file_comment.man E:/GitHub_Repos_E/libzip/man/zip_get_file_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_file_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_file_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_get_name.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_get_name.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_name.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_name.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_name.man E:/GitHub_Repos_E/libzip/man/zip_get_name.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_name.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_name.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_get_name.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_name.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_name.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_name.man E:/GitHub_Repos_E/libzip/man/zip_get_name.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_name.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_name.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_get_name.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_name.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_name.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_name.man E:/GitHub_Repos_E/libzip/man/zip_get_name.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_name.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_name.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_get_name.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_name.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_name.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_name.man E:/GitHub_Repos_E/libzip/man/zip_get_name.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_name.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_name.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_get_num_entries.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_get_num_entries.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_num_entries.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_num_entries.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_num_entries.man E:/GitHub_Repos_E/libzip/man/zip_get_num_entries.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_num_entries.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_num_entries.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_get_num_entries.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_num_entries.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_num_entries.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_num_entries.man E:/GitHub_Repos_E/libzip/man/zip_get_num_entries.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_num_entries.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_num_entries.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_get_num_entries.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_num_entries.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_num_entries.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_num_entries.man E:/GitHub_Repos_E/libzip/man/zip_get_num_entries.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_num_entries.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_num_entries.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_get_num_entries.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_num_entries.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_num_entries.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_num_entries.man E:/GitHub_Repos_E/libzip/man/zip_get_num_entries.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_num_entries.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_num_entries.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_get_num_files.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_get_num_files.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_num_files.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_num_files.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_num_files.man E:/GitHub_Repos_E/libzip/man/zip_get_num_files.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_num_files.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_num_files.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_get_num_files.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_num_files.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_num_files.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_num_files.man E:/GitHub_Repos_E/libzip/man/zip_get_num_files.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_num_files.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_num_files.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_get_num_files.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_num_files.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_num_files.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_num_files.man E:/GitHub_Repos_E/libzip/man/zip_get_num_files.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_num_files.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_num_files.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_get_num_files.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_get_num_files.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_get_num_files.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_get_num_files.man E:/GitHub_Repos_E/libzip/man/zip_get_num_files.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_get_num_files.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_get_num_files.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_libzip_version.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_libzip_version.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_libzip_version.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_libzip_version.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_libzip_version.man E:/GitHub_Repos_E/libzip/man/zip_libzip_version.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_libzip_version.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_libzip_version.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_libzip_version.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_libzip_version.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_libzip_version.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_libzip_version.man E:/GitHub_Repos_E/libzip/man/zip_libzip_version.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_libzip_version.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_libzip_version.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_libzip_version.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_libzip_version.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_libzip_version.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_libzip_version.man E:/GitHub_Repos_E/libzip/man/zip_libzip_version.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_libzip_version.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_libzip_version.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_libzip_version.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_libzip_version.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_libzip_version.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_libzip_version.man E:/GitHub_Repos_E/libzip/man/zip_libzip_version.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_libzip_version.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_libzip_version.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_name_locate.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_name_locate.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_name_locate.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_name_locate.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_name_locate.man E:/GitHub_Repos_E/libzip/man/zip_name_locate.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_name_locate.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_name_locate.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_name_locate.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_name_locate.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_name_locate.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_name_locate.man E:/GitHub_Repos_E/libzip/man/zip_name_locate.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_name_locate.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_name_locate.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_name_locate.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_name_locate.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_name_locate.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_name_locate.man E:/GitHub_Repos_E/libzip/man/zip_name_locate.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_name_locate.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_name_locate.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_name_locate.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_name_locate.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_name_locate.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_name_locate.man E:/GitHub_Repos_E/libzip/man/zip_name_locate.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_name_locate.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_name_locate.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_open.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_open.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_open.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_open.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_open.man E:/GitHub_Repos_E/libzip/man/zip_open.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_open.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_open.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_open.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_open.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_open.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_open.man E:/GitHub_Repos_E/libzip/man/zip_open.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_open.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_open.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_open.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_open.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_open.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_open.man E:/GitHub_Repos_E/libzip/man/zip_open.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_open.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_open.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_open.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_open.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_open.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_open.man E:/GitHub_Repos_E/libzip/man/zip_open.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_open.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_open.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_register_cancel_callback_with_state.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_register_cancel_callback_with_state.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_cancel_callback_with_state.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_cancel_callback_with_state.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_cancel_callback_with_state.man E:/GitHub_Repos_E/libzip/man/zip_register_cancel_callback_with_state.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_cancel_callback_with_state.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_cancel_callback_with_state.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_register_cancel_callback_with_state.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_cancel_callback_with_state.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_cancel_callback_with_state.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_cancel_callback_with_state.man E:/GitHub_Repos_E/libzip/man/zip_register_cancel_callback_with_state.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_cancel_callback_with_state.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_cancel_callback_with_state.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_register_cancel_callback_with_state.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_cancel_callback_with_state.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_cancel_callback_with_state.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_cancel_callback_with_state.man E:/GitHub_Repos_E/libzip/man/zip_register_cancel_callback_with_state.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_cancel_callback_with_state.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_cancel_callback_with_state.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_register_cancel_callback_with_state.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_cancel_callback_with_state.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_cancel_callback_with_state.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_cancel_callback_with_state.man E:/GitHub_Repos_E/libzip/man/zip_register_cancel_callback_with_state.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_cancel_callback_with_state.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_cancel_callback_with_state.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_register_progress_callback.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_register_progress_callback.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback.man E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_progress_callback.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_register_progress_callback.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback.man E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_progress_callback.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_register_progress_callback.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback.man E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_progress_callback.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_register_progress_callback.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback.man E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_progress_callback.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_register_progress_callback_with_state.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_register_progress_callback_with_state.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback_with_state.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback_with_state.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback_with_state.man E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback_with_state.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_progress_callback_with_state.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback_with_state.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_register_progress_callback_with_state.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback_with_state.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback_with_state.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback_with_state.man E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback_with_state.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_progress_callback_with_state.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback_with_state.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_register_progress_callback_with_state.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback_with_state.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback_with_state.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback_with_state.man E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback_with_state.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_progress_callback_with_state.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback_with_state.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_register_progress_callback_with_state.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback_with_state.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback_with_state.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_register_progress_callback_with_state.man E:/GitHub_Repos_E/libzip/man/zip_register_progress_callback_with_state.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_register_progress_callback_with_state.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback_with_state.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_rename.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_rename.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_rename.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_rename.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_rename.man E:/GitHub_Repos_E/libzip/man/zip_rename.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_rename.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_rename.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_rename.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_rename.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_rename.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_rename.man E:/GitHub_Repos_E/libzip/man/zip_rename.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_rename.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_rename.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_rename.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_rename.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_rename.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_rename.man E:/GitHub_Repos_E/libzip/man/zip_rename.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_rename.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_rename.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_rename.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_rename.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_rename.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_rename.man E:/GitHub_Repos_E/libzip/man/zip_rename.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_rename.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_rename.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_set_archive_comment.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_set_archive_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_archive_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_comment.man E:/GitHub_Repos_E/libzip/man/zip_set_archive_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_archive_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_set_archive_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_archive_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_comment.man E:/GitHub_Repos_E/libzip/man/zip_set_archive_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_archive_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_set_archive_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_archive_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_comment.man E:/GitHub_Repos_E/libzip/man/zip_set_archive_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_archive_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_set_archive_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_archive_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_comment.man E:/GitHub_Repos_E/libzip/man/zip_set_archive_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_archive_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_set_archive_flag.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_set_archive_flag.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_archive_flag.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_flag.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_flag.man E:/GitHub_Repos_E/libzip/man/zip_set_archive_flag.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_archive_flag.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_flag.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_set_archive_flag.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_archive_flag.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_flag.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_flag.man E:/GitHub_Repos_E/libzip/man/zip_set_archive_flag.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_archive_flag.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_flag.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_set_archive_flag.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_archive_flag.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_flag.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_flag.man E:/GitHub_Repos_E/libzip/man/zip_set_archive_flag.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_archive_flag.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_flag.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_set_archive_flag.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_archive_flag.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_flag.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_archive_flag.man E:/GitHub_Repos_E/libzip/man/zip_set_archive_flag.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_archive_flag.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_flag.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_set_default_password.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_set_default_password.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_default_password.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_default_password.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_default_password.man E:/GitHub_Repos_E/libzip/man/zip_set_default_password.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_default_password.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_default_password.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_set_default_password.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_default_password.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_default_password.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_default_password.man E:/GitHub_Repos_E/libzip/man/zip_set_default_password.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_default_password.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_default_password.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_set_default_password.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_default_password.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_default_password.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_default_password.man E:/GitHub_Repos_E/libzip/man/zip_set_default_password.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_default_password.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_default_password.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_set_default_password.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_default_password.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_default_password.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_default_password.man E:/GitHub_Repos_E/libzip/man/zip_set_default_password.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_default_password.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_default_password.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_set_file_comment.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_set_file_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_file_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_file_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_file_comment.man E:/GitHub_Repos_E/libzip/man/zip_set_file_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_file_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_file_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_set_file_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_file_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_file_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_file_comment.man E:/GitHub_Repos_E/libzip/man/zip_set_file_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_file_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_file_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_set_file_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_file_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_file_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_file_comment.man E:/GitHub_Repos_E/libzip/man/zip_set_file_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_file_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_file_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_set_file_comment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_file_comment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_file_comment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_file_comment.man E:/GitHub_Repos_E/libzip/man/zip_set_file_comment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_file_comment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_file_comment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_set_file_compression.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_set_file_compression.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_file_compression.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_file_compression.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_file_compression.man E:/GitHub_Repos_E/libzip/man/zip_set_file_compression.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_file_compression.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_file_compression.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_set_file_compression.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_file_compression.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_file_compression.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_file_compression.man E:/GitHub_Repos_E/libzip/man/zip_set_file_compression.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_file_compression.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_file_compression.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_set_file_compression.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_file_compression.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_file_compression.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_file_compression.man E:/GitHub_Repos_E/libzip/man/zip_set_file_compression.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_file_compression.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_file_compression.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_set_file_compression.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_set_file_compression.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_set_file_compression.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_set_file_compression.man E:/GitHub_Repos_E/libzip/man/zip_set_file_compression.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_set_file_compression.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_set_file_compression.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source.man E:/GitHub_Repos_E/libzip/man/zip_source.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source.man E:/GitHub_Repos_E/libzip/man/zip_source.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source.man E:/GitHub_Repos_E/libzip/man/zip_source.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source.man E:/GitHub_Repos_E/libzip/man/zip_source.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_begin_write.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_begin_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_begin_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_begin_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_begin_write.man E:/GitHub_Repos_E/libzip/man/zip_source_begin_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_begin_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_begin_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_begin_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_begin_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_begin_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_begin_write.man E:/GitHub_Repos_E/libzip/man/zip_source_begin_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_begin_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_begin_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_begin_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_begin_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_begin_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_begin_write.man E:/GitHub_Repos_E/libzip/man/zip_source_begin_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_begin_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_begin_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_begin_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_begin_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_begin_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_begin_write.man E:/GitHub_Repos_E/libzip/man/zip_source_begin_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_begin_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_begin_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_buffer.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_buffer.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_buffer.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer.man E:/GitHub_Repos_E/libzip/man/zip_source_buffer.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_buffer.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_buffer.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_buffer.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer.man E:/GitHub_Repos_E/libzip/man/zip_source_buffer.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_buffer.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_buffer.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_buffer.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer.man E:/GitHub_Repos_E/libzip/man/zip_source_buffer.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_buffer.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_buffer.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_buffer.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer.man E:/GitHub_Repos_E/libzip/man/zip_source_buffer.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_buffer.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_buffer_fragment.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_buffer_fragment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_buffer_fragment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer_fragment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer_fragment.man E:/GitHub_Repos_E/libzip/man/zip_source_buffer_fragment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_buffer_fragment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer_fragment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_buffer_fragment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_buffer_fragment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer_fragment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer_fragment.man E:/GitHub_Repos_E/libzip/man/zip_source_buffer_fragment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_buffer_fragment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer_fragment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_buffer_fragment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_buffer_fragment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer_fragment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer_fragment.man E:/GitHub_Repos_E/libzip/man/zip_source_buffer_fragment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_buffer_fragment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer_fragment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_buffer_fragment.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_buffer_fragment.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer_fragment.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_buffer_fragment.man E:/GitHub_Repos_E/libzip/man/zip_source_buffer_fragment.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_buffer_fragment.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer_fragment.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_close.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_close.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_close.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_close.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_close.man E:/GitHub_Repos_E/libzip/man/zip_source_close.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_close.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_close.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_close.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_close.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_close.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_close.man E:/GitHub_Repos_E/libzip/man/zip_source_close.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_close.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_close.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_close.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_close.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_close.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_close.man E:/GitHub_Repos_E/libzip/man/zip_source_close.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_close.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_close.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_close.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_close.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_close.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_close.man E:/GitHub_Repos_E/libzip/man/zip_source_close.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_close.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_close.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_commit_write.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_commit_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_commit_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_commit_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_commit_write.man E:/GitHub_Repos_E/libzip/man/zip_source_commit_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_commit_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_commit_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_commit_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_commit_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_commit_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_commit_write.man E:/GitHub_Repos_E/libzip/man/zip_source_commit_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_commit_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_commit_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_commit_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_commit_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_commit_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_commit_write.man E:/GitHub_Repos_E/libzip/man/zip_source_commit_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_commit_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_commit_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_commit_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_commit_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_commit_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_commit_write.man E:/GitHub_Repos_E/libzip/man/zip_source_commit_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_commit_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_commit_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_error.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_error.man E:/GitHub_Repos_E/libzip/man/zip_source_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_error.man E:/GitHub_Repos_E/libzip/man/zip_source_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_error.man E:/GitHub_Repos_E/libzip/man/zip_source_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_error.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_error.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_error.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_error.man E:/GitHub_Repos_E/libzip/man/zip_source_error.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_error.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_error.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_file.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_file.man E:/GitHub_Repos_E/libzip/man/zip_source_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_file.man E:/GitHub_Repos_E/libzip/man/zip_source_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_file.man E:/GitHub_Repos_E/libzip/man/zip_source_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_file.man E:/GitHub_Repos_E/libzip/man/zip_source_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_filep.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_filep.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_filep.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_filep.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_filep.man E:/GitHub_Repos_E/libzip/man/zip_source_filep.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_filep.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_filep.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_filep.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_filep.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_filep.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_filep.man E:/GitHub_Repos_E/libzip/man/zip_source_filep.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_filep.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_filep.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_filep.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_filep.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_filep.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_filep.man E:/GitHub_Repos_E/libzip/man/zip_source_filep.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_filep.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_filep.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_filep.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_filep.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_filep.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_filep.man E:/GitHub_Repos_E/libzip/man/zip_source_filep.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_filep.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_filep.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_free.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_free.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_free.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_free.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_free.man E:/GitHub_Repos_E/libzip/man/zip_source_free.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_free.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_free.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_free.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_free.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_free.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_free.man E:/GitHub_Repos_E/libzip/man/zip_source_free.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_free.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_free.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_free.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_free.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_free.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_free.man E:/GitHub_Repos_E/libzip/man/zip_source_free.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_free.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_free.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_free.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_free.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_free.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_free.man E:/GitHub_Repos_E/libzip/man/zip_source_free.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_free.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_free.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_function.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_function.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_function.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_function.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_function.man E:/GitHub_Repos_E/libzip/man/zip_source_function.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_function.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_function.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_function.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_function.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_function.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_function.man E:/GitHub_Repos_E/libzip/man/zip_source_function.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_function.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_function.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_function.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_function.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_function.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_function.man E:/GitHub_Repos_E/libzip/man/zip_source_function.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_function.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_function.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_function.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_function.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_function.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_function.man E:/GitHub_Repos_E/libzip/man/zip_source_function.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_function.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_function.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_is_deleted.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_is_deleted.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_is_deleted.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_is_deleted.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_is_deleted.man E:/GitHub_Repos_E/libzip/man/zip_source_is_deleted.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_is_deleted.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_is_deleted.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_is_deleted.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_is_deleted.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_is_deleted.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_is_deleted.man E:/GitHub_Repos_E/libzip/man/zip_source_is_deleted.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_is_deleted.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_is_deleted.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_is_deleted.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_is_deleted.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_is_deleted.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_is_deleted.man E:/GitHub_Repos_E/libzip/man/zip_source_is_deleted.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_is_deleted.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_is_deleted.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_is_deleted.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_is_deleted.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_is_deleted.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_is_deleted.man E:/GitHub_Repos_E/libzip/man/zip_source_is_deleted.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_is_deleted.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_is_deleted.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_is_seekable.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_is_seekable.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_is_seekable.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_is_seekable.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_is_seekable.man E:/GitHub_Repos_E/libzip/man/zip_source_is_seekable.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_is_seekable.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_is_seekable.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_is_seekable.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_is_seekable.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_is_seekable.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_is_seekable.man E:/GitHub_Repos_E/libzip/man/zip_source_is_seekable.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_is_seekable.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_is_seekable.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_is_seekable.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_is_seekable.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_is_seekable.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_is_seekable.man E:/GitHub_Repos_E/libzip/man/zip_source_is_seekable.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_is_seekable.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_is_seekable.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_is_seekable.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_is_seekable.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_is_seekable.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_is_seekable.man E:/GitHub_Repos_E/libzip/man/zip_source_is_seekable.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_is_seekable.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_is_seekable.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_keep.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_keep.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_keep.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_keep.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_keep.man E:/GitHub_Repos_E/libzip/man/zip_source_keep.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_keep.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_keep.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_keep.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_keep.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_keep.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_keep.man E:/GitHub_Repos_E/libzip/man/zip_source_keep.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_keep.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_keep.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_keep.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_keep.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_keep.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_keep.man E:/GitHub_Repos_E/libzip/man/zip_source_keep.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_keep.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_keep.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_keep.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_keep.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_keep.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_keep.man E:/GitHub_Repos_E/libzip/man/zip_source_keep.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_keep.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_keep.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_layered.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_layered.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_layered.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_layered.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_layered.man E:/GitHub_Repos_E/libzip/man/zip_source_layered.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_layered.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_layered.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_layered.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_layered.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_layered.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_layered.man E:/GitHub_Repos_E/libzip/man/zip_source_layered.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_layered.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_layered.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_layered.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_layered.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_layered.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_layered.man E:/GitHub_Repos_E/libzip/man/zip_source_layered.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_layered.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_layered.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_layered.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_layered.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_layered.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_layered.man E:/GitHub_Repos_E/libzip/man/zip_source_layered.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_layered.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_layered.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_make_command_bitmap.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_make_command_bitmap.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_make_command_bitmap.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_make_command_bitmap.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_make_command_bitmap.man E:/GitHub_Repos_E/libzip/man/zip_source_make_command_bitmap.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_make_command_bitmap.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_make_command_bitmap.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_make_command_bitmap.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_make_command_bitmap.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_make_command_bitmap.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_make_command_bitmap.man E:/GitHub_Repos_E/libzip/man/zip_source_make_command_bitmap.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_make_command_bitmap.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_make_command_bitmap.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_make_command_bitmap.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_make_command_bitmap.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_make_command_bitmap.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_make_command_bitmap.man E:/GitHub_Repos_E/libzip/man/zip_source_make_command_bitmap.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_make_command_bitmap.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_make_command_bitmap.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_make_command_bitmap.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_make_command_bitmap.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_make_command_bitmap.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_make_command_bitmap.man E:/GitHub_Repos_E/libzip/man/zip_source_make_command_bitmap.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_make_command_bitmap.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_make_command_bitmap.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_open.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_open.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_open.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_open.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_open.man E:/GitHub_Repos_E/libzip/man/zip_source_open.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_open.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_open.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_open.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_open.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_open.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_open.man E:/GitHub_Repos_E/libzip/man/zip_source_open.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_open.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_open.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_open.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_open.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_open.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_open.man E:/GitHub_Repos_E/libzip/man/zip_source_open.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_open.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_open.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_open.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_open.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_open.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_open.man E:/GitHub_Repos_E/libzip/man/zip_source_open.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_open.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_open.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_read.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_read.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_read.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_read.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_read.man E:/GitHub_Repos_E/libzip/man/zip_source_read.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_read.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_read.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_read.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_read.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_read.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_read.man E:/GitHub_Repos_E/libzip/man/zip_source_read.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_read.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_read.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_read.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_read.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_read.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_read.man E:/GitHub_Repos_E/libzip/man/zip_source_read.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_read.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_read.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_read.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_read.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_read.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_read.man E:/GitHub_Repos_E/libzip/man/zip_source_read.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_read.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_read.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_rollback_write.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_rollback_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_rollback_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_rollback_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_rollback_write.man E:/GitHub_Repos_E/libzip/man/zip_source_rollback_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_rollback_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_rollback_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_rollback_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_rollback_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_rollback_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_rollback_write.man E:/GitHub_Repos_E/libzip/man/zip_source_rollback_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_rollback_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_rollback_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_rollback_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_rollback_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_rollback_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_rollback_write.man E:/GitHub_Repos_E/libzip/man/zip_source_rollback_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_rollback_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_rollback_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_rollback_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_rollback_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_rollback_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_rollback_write.man E:/GitHub_Repos_E/libzip/man/zip_source_rollback_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_rollback_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_rollback_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_seek.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_seek.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek.man E:/GitHub_Repos_E/libzip/man/zip_source_seek.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_seek.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek.man E:/GitHub_Repos_E/libzip/man/zip_source_seek.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_seek.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek.man E:/GitHub_Repos_E/libzip/man/zip_source_seek.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_seek.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek.man E:/GitHub_Repos_E/libzip/man/zip_source_seek.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_seek_compute_offset.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_seek_compute_offset.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek_compute_offset.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_compute_offset.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_compute_offset.man E:/GitHub_Repos_E/libzip/man/zip_source_seek_compute_offset.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek_compute_offset.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_compute_offset.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_seek_compute_offset.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek_compute_offset.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_compute_offset.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_compute_offset.man E:/GitHub_Repos_E/libzip/man/zip_source_seek_compute_offset.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek_compute_offset.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_compute_offset.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_seek_compute_offset.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek_compute_offset.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_compute_offset.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_compute_offset.man E:/GitHub_Repos_E/libzip/man/zip_source_seek_compute_offset.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek_compute_offset.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_compute_offset.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_seek_compute_offset.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek_compute_offset.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_compute_offset.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_compute_offset.man E:/GitHub_Repos_E/libzip/man/zip_source_seek_compute_offset.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek_compute_offset.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_compute_offset.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_seek_write.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_seek_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_write.man E:/GitHub_Repos_E/libzip/man/zip_source_seek_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_seek_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_write.man E:/GitHub_Repos_E/libzip/man/zip_source_seek_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_seek_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_write.man E:/GitHub_Repos_E/libzip/man/zip_source_seek_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_seek_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_seek_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_seek_write.man E:/GitHub_Repos_E/libzip/man/zip_source_seek_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_seek_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_stat.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_stat.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_stat.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_stat.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_stat.man E:/GitHub_Repos_E/libzip/man/zip_source_stat.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_stat.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_stat.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_stat.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_stat.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_stat.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_stat.man E:/GitHub_Repos_E/libzip/man/zip_source_stat.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_stat.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_stat.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_stat.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_stat.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_stat.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_stat.man E:/GitHub_Repos_E/libzip/man/zip_source_stat.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_stat.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_stat.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_stat.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_stat.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_stat.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_stat.man E:/GitHub_Repos_E/libzip/man/zip_source_stat.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_stat.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_stat.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_tell.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_tell.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_tell.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_tell.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_tell.man E:/GitHub_Repos_E/libzip/man/zip_source_tell.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_tell.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_tell.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_tell.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_tell.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_tell.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_tell.man E:/GitHub_Repos_E/libzip/man/zip_source_tell.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_tell.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_tell.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_tell.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_tell.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_tell.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_tell.man E:/GitHub_Repos_E/libzip/man/zip_source_tell.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_tell.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_tell.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_tell.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_tell.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_tell.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_tell.man E:/GitHub_Repos_E/libzip/man/zip_source_tell.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_tell.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_tell.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_tell_write.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_tell_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_tell_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_tell_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_tell_write.man E:/GitHub_Repos_E/libzip/man/zip_source_tell_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_tell_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_tell_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_tell_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_tell_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_tell_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_tell_write.man E:/GitHub_Repos_E/libzip/man/zip_source_tell_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_tell_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_tell_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_tell_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_tell_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_tell_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_tell_write.man E:/GitHub_Repos_E/libzip/man/zip_source_tell_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_tell_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_tell_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_tell_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_tell_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_tell_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_tell_write.man E:/GitHub_Repos_E/libzip/man/zip_source_tell_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_tell_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_tell_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_win32a.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_win32a.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32a.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32a.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32a.man E:/GitHub_Repos_E/libzip/man/zip_source_win32a.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32a.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32a.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_win32a.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32a.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32a.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32a.man E:/GitHub_Repos_E/libzip/man/zip_source_win32a.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32a.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32a.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_win32a.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32a.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32a.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32a.man E:/GitHub_Repos_E/libzip/man/zip_source_win32a.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32a.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32a.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_win32a.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32a.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32a.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32a.man E:/GitHub_Repos_E/libzip/man/zip_source_win32a.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32a.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32a.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_win32handle.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_win32handle.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32handle.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32handle.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32handle.man E:/GitHub_Repos_E/libzip/man/zip_source_win32handle.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32handle.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32handle.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_win32handle.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32handle.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32handle.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32handle.man E:/GitHub_Repos_E/libzip/man/zip_source_win32handle.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32handle.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32handle.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_win32handle.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32handle.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32handle.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32handle.man E:/GitHub_Repos_E/libzip/man/zip_source_win32handle.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32handle.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32handle.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_win32handle.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32handle.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32handle.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32handle.man E:/GitHub_Repos_E/libzip/man/zip_source_win32handle.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32handle.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32handle.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_win32w.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_win32w.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32w.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32w.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32w.man E:/GitHub_Repos_E/libzip/man/zip_source_win32w.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32w.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32w.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_win32w.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32w.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32w.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32w.man E:/GitHub_Repos_E/libzip/man/zip_source_win32w.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32w.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32w.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_win32w.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32w.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32w.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32w.man E:/GitHub_Repos_E/libzip/man/zip_source_win32w.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32w.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32w.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_win32w.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_win32w.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_win32w.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_win32w.man E:/GitHub_Repos_E/libzip/man/zip_source_win32w.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_win32w.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_win32w.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_window_create.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_window_create.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_window_create.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_window_create.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_window_create.man E:/GitHub_Repos_E/libzip/man/zip_source_window_create.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_window_create.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_window_create.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_window_create.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_window_create.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_window_create.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_window_create.man E:/GitHub_Repos_E/libzip/man/zip_source_window_create.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_window_create.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_window_create.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_window_create.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_window_create.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_window_create.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_window_create.man E:/GitHub_Repos_E/libzip/man/zip_source_window_create.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_window_create.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_window_create.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_window_create.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_window_create.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_window_create.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_window_create.man E:/GitHub_Repos_E/libzip/man/zip_source_window_create.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_window_create.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_window_create.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_write.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_write.man E:/GitHub_Repos_E/libzip/man/zip_source_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_write.man E:/GitHub_Repos_E/libzip/man/zip_source_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_write.man E:/GitHub_Repos_E/libzip/man/zip_source_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_write.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_write.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_write.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_write.man E:/GitHub_Repos_E/libzip/man/zip_source_write.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_write.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_write.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_zip.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_zip.man E:/GitHub_Repos_E/libzip/man/zip_source_zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_zip.man E:/GitHub_Repos_E/libzip/man/zip_source_zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_zip.man E:/GitHub_Repos_E/libzip/man/zip_source_zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_zip.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_zip.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_zip.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_zip.man E:/GitHub_Repos_E/libzip/man/zip_source_zip.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_zip.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_zip.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_source_zip_file.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_source_zip_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_zip_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_zip_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_zip_file.man E:/GitHub_Repos_E/libzip/man/zip_source_zip_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_zip_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_zip_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_source_zip_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_zip_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_zip_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_zip_file.man E:/GitHub_Repos_E/libzip/man/zip_source_zip_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_zip_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_zip_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_source_zip_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_zip_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_zip_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_zip_file.man E:/GitHub_Repos_E/libzip/man/zip_source_zip_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_zip_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_zip_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_source_zip_file.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_source_zip_file.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_source_zip_file.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_source_zip_file.man E:/GitHub_Repos_E/libzip/man/zip_source_zip_file.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_source_zip_file.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_source_zip_file.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_stat.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_stat.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_stat.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_stat.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_stat.man E:/GitHub_Repos_E/libzip/man/zip_stat.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_stat.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_stat.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_stat.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_stat.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_stat.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_stat.man E:/GitHub_Repos_E/libzip/man/zip_stat.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_stat.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_stat.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_stat.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_stat.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_stat.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_stat.man E:/GitHub_Repos_E/libzip/man/zip_stat.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_stat.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_stat.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_stat.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_stat.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_stat.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_stat.man E:/GitHub_Repos_E/libzip/man/zip_stat.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_stat.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_stat.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_stat_init.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_stat_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_stat_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_stat_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_stat_init.man E:/GitHub_Repos_E/libzip/man/zip_stat_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_stat_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_stat_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_stat_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_stat_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_stat_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_stat_init.man E:/GitHub_Repos_E/libzip/man/zip_stat_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_stat_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_stat_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_stat_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_stat_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_stat_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_stat_init.man E:/GitHub_Repos_E/libzip/man/zip_stat_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_stat_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_stat_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_stat_init.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_stat_init.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_stat_init.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_stat_init.man E:/GitHub_Repos_E/libzip/man/zip_stat_init.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_stat_init.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_stat_init.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_unchange.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_unchange.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange.man E:/GitHub_Repos_E/libzip/man/zip_unchange.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_unchange.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange.man E:/GitHub_Repos_E/libzip/man/zip_unchange.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_unchange.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange.man E:/GitHub_Repos_E/libzip/man/zip_unchange.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_unchange.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange.man E:/GitHub_Repos_E/libzip/man/zip_unchange.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_unchange_all.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_unchange_all.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange_all.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange_all.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange_all.man E:/GitHub_Repos_E/libzip/man/zip_unchange_all.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange_all.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange_all.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_unchange_all.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange_all.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange_all.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange_all.man E:/GitHub_Repos_E/libzip/man/zip_unchange_all.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange_all.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange_all.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_unchange_all.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange_all.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange_all.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange_all.man E:/GitHub_Repos_E/libzip/man/zip_unchange_all.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange_all.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange_all.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_unchange_all.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange_all.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange_all.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange_all.man E:/GitHub_Repos_E/libzip/man/zip_unchange_all.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange_all.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange_all.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zip_unchange_archive.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zip_unchange_archive.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange_archive.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange_archive.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange_archive.man E:/GitHub_Repos_E/libzip/man/zip_unchange_archive.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange_archive.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange_archive.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zip_unchange_archive.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange_archive.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange_archive.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange_archive.man E:/GitHub_Repos_E/libzip/man/zip_unchange_archive.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange_archive.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange_archive.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zip_unchange_archive.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange_archive.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange_archive.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange_archive.man E:/GitHub_Repos_E/libzip/man/zip_unchange_archive.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange_archive.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange_archive.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zip_unchange_archive.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zip_unchange_archive.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zip_unchange_archive.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zip_unchange_archive.man E:/GitHub_Repos_E/libzip/man/zip_unchange_archive.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zip_unchange_archive.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zip_unchange_archive.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zipcmp.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zipcmp.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zipcmp.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zipcmp.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zipcmp.man E:/GitHub_Repos_E/libzip/man/zipcmp.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zipcmp.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zipcmp.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zipcmp.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zipcmp.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zipcmp.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zipcmp.man E:/GitHub_Repos_E/libzip/man/zipcmp.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zipcmp.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zipcmp.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zipcmp.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zipcmp.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zipcmp.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zipcmp.man E:/GitHub_Repos_E/libzip/man/zipcmp.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zipcmp.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zipcmp.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zipcmp.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zipcmp.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zipcmp.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zipcmp.man E:/GitHub_Repos_E/libzip/man/zipcmp.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zipcmp.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zipcmp.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\zipmerge.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating zipmerge.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zipmerge.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zipmerge.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zipmerge.man E:/GitHub_Repos_E/libzip/man/zipmerge.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\zipmerge.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\zipmerge.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating zipmerge.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zipmerge.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zipmerge.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zipmerge.man E:/GitHub_Repos_E/libzip/man/zipmerge.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\zipmerge.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\zipmerge.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating zipmerge.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zipmerge.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zipmerge.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zipmerge.man E:/GitHub_Repos_E/libzip/man/zipmerge.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\zipmerge.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\zipmerge.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating zipmerge.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/zipmerge.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/zipmerge.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/zipmerge.man E:/GitHub_Repos_E/libzip/man/zipmerge.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\zipmerge.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\zipmerge.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\bc9dd00f6a882bc9ca3248d7bdab5bc6\ziptool.man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating ziptool.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/ziptool.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/ziptool.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/ziptool.man E:/GitHub_Repos_E/libzip/man/ziptool.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\man\ziptool.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\ziptool.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating ziptool.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/ziptool.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/ziptool.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/ziptool.man E:/GitHub_Repos_E/libzip/man/ziptool.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\man\ziptool.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\ziptool.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Generating ziptool.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/ziptool.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/ziptool.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/ziptool.man E:/GitHub_Repos_E/libzip/man/ziptool.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\man\ziptool.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\ziptool.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Generating ziptool.man</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -DIN=E:/GitHub_Repos_E/libzip/man/ziptool.mdoc -DOUT=E:/GitHub_Repos_E/libzip/build/man/ziptool.man -P E:/GitHub_Repos_E/libzip/man/update-man.cmake
if %errorlevel% neq 0 goto :cmEnd
"E:\Other Programs\Cmake\bin\cmake.exe" -E copy_if_different E:/GitHub_Repos_E/libzip/build/man/ziptool.man E:/GitHub_Repos_E/libzip/man/ziptool.man
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\man\ziptool.mdoc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\ziptool.man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\build\CMakeFiles\7bf128a8a7134ceae154effabc4f0ec7\update-man.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\ZIP_SOURCE_GET_ARGS.man;E:\GitHub_Repos_E\libzip\build\man\libzip.man;E:\GitHub_Repos_E\libzip\build\man\zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_add_dir.man;E:\GitHub_Repos_E\libzip\build\man\zip_close.man;E:\GitHub_Repos_E\libzip\build\man\zip_compression_method_supported.man;E:\GitHub_Repos_E\libzip\build\man\zip_delete.man;E:\GitHub_Repos_E\libzip\build\man\zip_dir_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_discard.man;E:\GitHub_Repos_E\libzip\build\man\zip_encryption_method_supported.man;E:\GitHub_Repos_E\libzip\build\man\zip_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_clear.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_code_system.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_code_zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_fini.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_get.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_get_sys_type.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_set.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_set_from_source.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_strerror.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_system_type.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_to_data.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_to_str.man;E:\GitHub_Repos_E\libzip\build\man\zip_errors.man;E:\GitHub_Repos_E\libzip\build\man\zip_fclose.man;E:\GitHub_Repos_E\libzip\build\man\zip_fdopen.man;E:\GitHub_Repos_E\libzip\build\man\zip_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_attributes_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_delete.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_get.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_set.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_fields_count.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_external_attributes.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_rename.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_encryption.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_external_attributes.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_mtime.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_strerror.man;E:\GitHub_Repos_E\libzip\build\man\zip_fopen.man;E:\GitHub_Repos_E\libzip\build\man\zip_fopen_encrypted.man;E:\GitHub_Repos_E\libzip\build\man\zip_fread.man;E:\GitHub_Repos_E\libzip\build\man\zip_fseek.man;E:\GitHub_Repos_E\libzip\build\man\zip_ftell.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_flag.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_file_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_name.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_num_entries.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_num_files.man;E:\GitHub_Repos_E\libzip\build\man\zip_libzip_version.man;E:\GitHub_Repos_E\libzip\build\man\zip_name_locate.man;E:\GitHub_Repos_E\libzip\build\man\zip_open.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_cancel_callback_with_state.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback_with_state.man;E:\GitHub_Repos_E\libzip\build\man\zip_rename.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_flag.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_default_password.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_file_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_file_compression.man;E:\GitHub_Repos_E\libzip\build\man\zip_source.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_begin_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer_fragment.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_close.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_commit_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_filep.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_free.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_function.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_is_deleted.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_is_seekable.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_layered.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_keep.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_make_command_bitmap.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_open.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_read.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_rollback_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_compute_offset.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_stat.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_tell.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_tell_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32a.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32handle.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32w.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_window_create.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_zip_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_stat.man;E:\GitHub_Repos_E\libzip\build\man\zip_stat_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange_all.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange_archive.man;E:\GitHub_Repos_E\libzip\build\man\zipcmp.man;E:\GitHub_Repos_E\libzip\build\man\zipmerge.man;E:\GitHub_Repos_E\libzip\build\man\ziptool.man;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\CMakeFiles\update-man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\ZIP_SOURCE_GET_ARGS.man;E:\GitHub_Repos_E\libzip\build\man\libzip.man;E:\GitHub_Repos_E\libzip\build\man\zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_add_dir.man;E:\GitHub_Repos_E\libzip\build\man\zip_close.man;E:\GitHub_Repos_E\libzip\build\man\zip_compression_method_supported.man;E:\GitHub_Repos_E\libzip\build\man\zip_delete.man;E:\GitHub_Repos_E\libzip\build\man\zip_dir_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_discard.man;E:\GitHub_Repos_E\libzip\build\man\zip_encryption_method_supported.man;E:\GitHub_Repos_E\libzip\build\man\zip_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_clear.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_code_system.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_code_zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_fini.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_get.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_get_sys_type.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_set.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_set_from_source.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_strerror.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_system_type.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_to_data.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_to_str.man;E:\GitHub_Repos_E\libzip\build\man\zip_errors.man;E:\GitHub_Repos_E\libzip\build\man\zip_fclose.man;E:\GitHub_Repos_E\libzip\build\man\zip_fdopen.man;E:\GitHub_Repos_E\libzip\build\man\zip_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_attributes_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_delete.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_get.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_set.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_fields_count.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_external_attributes.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_rename.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_encryption.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_external_attributes.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_mtime.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_strerror.man;E:\GitHub_Repos_E\libzip\build\man\zip_fopen.man;E:\GitHub_Repos_E\libzip\build\man\zip_fopen_encrypted.man;E:\GitHub_Repos_E\libzip\build\man\zip_fread.man;E:\GitHub_Repos_E\libzip\build\man\zip_fseek.man;E:\GitHub_Repos_E\libzip\build\man\zip_ftell.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_flag.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_file_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_name.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_num_entries.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_num_files.man;E:\GitHub_Repos_E\libzip\build\man\zip_libzip_version.man;E:\GitHub_Repos_E\libzip\build\man\zip_name_locate.man;E:\GitHub_Repos_E\libzip\build\man\zip_open.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_cancel_callback_with_state.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback_with_state.man;E:\GitHub_Repos_E\libzip\build\man\zip_rename.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_flag.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_default_password.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_file_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_file_compression.man;E:\GitHub_Repos_E\libzip\build\man\zip_source.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_begin_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer_fragment.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_close.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_commit_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_filep.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_free.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_function.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_is_deleted.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_is_seekable.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_layered.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_keep.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_make_command_bitmap.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_open.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_read.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_rollback_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_compute_offset.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_stat.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_tell.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_tell_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32a.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32handle.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32w.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_window_create.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_zip_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_stat.man;E:\GitHub_Repos_E\libzip\build\man\zip_stat_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange_all.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange_archive.man;E:\GitHub_Repos_E\libzip\build\man\zipcmp.man;E:\GitHub_Repos_E\libzip\build\man\zipmerge.man;E:\GitHub_Repos_E\libzip\build\man\ziptool.man;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\CMakeFiles\update-man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\ZIP_SOURCE_GET_ARGS.man;E:\GitHub_Repos_E\libzip\build\man\libzip.man;E:\GitHub_Repos_E\libzip\build\man\zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_add_dir.man;E:\GitHub_Repos_E\libzip\build\man\zip_close.man;E:\GitHub_Repos_E\libzip\build\man\zip_compression_method_supported.man;E:\GitHub_Repos_E\libzip\build\man\zip_delete.man;E:\GitHub_Repos_E\libzip\build\man\zip_dir_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_discard.man;E:\GitHub_Repos_E\libzip\build\man\zip_encryption_method_supported.man;E:\GitHub_Repos_E\libzip\build\man\zip_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_clear.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_code_system.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_code_zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_fini.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_get.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_get_sys_type.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_set.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_set_from_source.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_strerror.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_system_type.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_to_data.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_to_str.man;E:\GitHub_Repos_E\libzip\build\man\zip_errors.man;E:\GitHub_Repos_E\libzip\build\man\zip_fclose.man;E:\GitHub_Repos_E\libzip\build\man\zip_fdopen.man;E:\GitHub_Repos_E\libzip\build\man\zip_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_attributes_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_delete.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_get.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_set.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_fields_count.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_external_attributes.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_rename.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_encryption.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_external_attributes.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_mtime.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_strerror.man;E:\GitHub_Repos_E\libzip\build\man\zip_fopen.man;E:\GitHub_Repos_E\libzip\build\man\zip_fopen_encrypted.man;E:\GitHub_Repos_E\libzip\build\man\zip_fread.man;E:\GitHub_Repos_E\libzip\build\man\zip_fseek.man;E:\GitHub_Repos_E\libzip\build\man\zip_ftell.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_flag.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_file_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_name.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_num_entries.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_num_files.man;E:\GitHub_Repos_E\libzip\build\man\zip_libzip_version.man;E:\GitHub_Repos_E\libzip\build\man\zip_name_locate.man;E:\GitHub_Repos_E\libzip\build\man\zip_open.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_cancel_callback_with_state.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback_with_state.man;E:\GitHub_Repos_E\libzip\build\man\zip_rename.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_flag.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_default_password.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_file_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_file_compression.man;E:\GitHub_Repos_E\libzip\build\man\zip_source.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_begin_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer_fragment.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_close.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_commit_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_filep.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_free.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_function.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_is_deleted.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_is_seekable.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_layered.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_keep.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_make_command_bitmap.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_open.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_read.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_rollback_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_compute_offset.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_stat.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_tell.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_tell_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32a.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32handle.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32w.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_window_create.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_zip_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_stat.man;E:\GitHub_Repos_E\libzip\build\man\zip_stat_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange_all.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange_archive.man;E:\GitHub_Repos_E\libzip\build\man\zipcmp.man;E:\GitHub_Repos_E\libzip\build\man\zipmerge.man;E:\GitHub_Repos_E\libzip\build\man\ziptool.man;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\CMakeFiles\update-man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\ZIP_SOURCE_GET_ARGS.man;E:\GitHub_Repos_E\libzip\build\man\libzip.man;E:\GitHub_Repos_E\libzip\build\man\zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_add_dir.man;E:\GitHub_Repos_E\libzip\build\man\zip_close.man;E:\GitHub_Repos_E\libzip\build\man\zip_compression_method_supported.man;E:\GitHub_Repos_E\libzip\build\man\zip_delete.man;E:\GitHub_Repos_E\libzip\build\man\zip_dir_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_discard.man;E:\GitHub_Repos_E\libzip\build\man\zip_encryption_method_supported.man;E:\GitHub_Repos_E\libzip\build\man\zip_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_clear.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_code_system.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_code_zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_fini.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_get.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_get_sys_type.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_set.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_set_from_source.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_strerror.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_system_type.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_to_data.man;E:\GitHub_Repos_E\libzip\build\man\zip_error_to_str.man;E:\GitHub_Repos_E\libzip\build\man\zip_errors.man;E:\GitHub_Repos_E\libzip\build\man\zip_fclose.man;E:\GitHub_Repos_E\libzip\build\man\zip_fdopen.man;E:\GitHub_Repos_E\libzip\build\man\zip_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_add.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_attributes_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_delete.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_get.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_field_set.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_extra_fields_count.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_get_external_attributes.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_rename.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_encryption.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_external_attributes.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_set_mtime.man;E:\GitHub_Repos_E\libzip\build\man\zip_file_strerror.man;E:\GitHub_Repos_E\libzip\build\man\zip_fopen.man;E:\GitHub_Repos_E\libzip\build\man\zip_fopen_encrypted.man;E:\GitHub_Repos_E\libzip\build\man\zip_fread.man;E:\GitHub_Repos_E\libzip\build\man\zip_fseek.man;E:\GitHub_Repos_E\libzip\build\man\zip_ftell.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_archive_flag.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_file_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_name.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_num_entries.man;E:\GitHub_Repos_E\libzip\build\man\zip_get_num_files.man;E:\GitHub_Repos_E\libzip\build\man\zip_libzip_version.man;E:\GitHub_Repos_E\libzip\build\man\zip_name_locate.man;E:\GitHub_Repos_E\libzip\build\man\zip_open.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_cancel_callback_with_state.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback.man;E:\GitHub_Repos_E\libzip\build\man\zip_register_progress_callback_with_state.man;E:\GitHub_Repos_E\libzip\build\man\zip_rename.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_archive_flag.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_default_password.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_file_comment.man;E:\GitHub_Repos_E\libzip\build\man\zip_set_file_compression.man;E:\GitHub_Repos_E\libzip\build\man\zip_source.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_begin_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_buffer_fragment.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_close.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_commit_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_error.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_filep.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_free.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_function.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_is_deleted.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_is_seekable.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_layered.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_keep.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_make_command_bitmap.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_open.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_read.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_rollback_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_compute_offset.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_seek_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_stat.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_tell.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_tell_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32a.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32handle.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_win32w.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_window_create.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_write.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_zip.man;E:\GitHub_Repos_E\libzip\build\man\zip_source_zip_file.man;E:\GitHub_Repos_E\libzip\build\man\zip_stat.man;E:\GitHub_Repos_E\libzip\build\man\zip_stat_init.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange_all.man;E:\GitHub_Repos_E\libzip\build\man\zip_unchange_archive.man;E:\GitHub_Repos_E\libzip\build\man\zipcmp.man;E:\GitHub_Repos_E\libzip\build\man\zipmerge.man;E:\GitHub_Repos_E\libzip\build\man\ziptool.man;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\CMakeFiles\update-man</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub_Repos_E\libzip\man\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule E:/GitHub_Repos_E/libzip/man/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -SE:/GitHub_Repos_E/libzip -BE:/GitHub_Repos_E/libzip/build --check-stamp-file E:/GitHub_Repos_E/libzip/build/man/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub_Repos_E\libzip\build\man\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule E:/GitHub_Repos_E/libzip/man/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -SE:/GitHub_Repos_E/libzip -BE:/GitHub_Repos_E/libzip/build --check-stamp-file E:/GitHub_Repos_E/libzip/build/man/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub_Repos_E\libzip\build\man\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule E:/GitHub_Repos_E/libzip/man/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -SE:/GitHub_Repos_E/libzip -BE:/GitHub_Repos_E/libzip/build --check-stamp-file E:/GitHub_Repos_E/libzip/build/man/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub_Repos_E\libzip\build\man\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule E:/GitHub_Repos_E/libzip/man/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"E:\Other Programs\Cmake\bin\cmake.exe" -SE:/GitHub_Repos_E/libzip -BE:/GitHub_Repos_E/libzip/build --check-stamp-file E:/GitHub_Repos_E/libzip/build/man/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub_Repos_E\libzip\build\man\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="E:\GitHub_Repos_E\libzip\build\man\CMakeFiles\update-man">
    </None>
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <ProjectReference Include="E:\GitHub_Repos_E\libzip\build\ZERO_CHECK.vcxproj">
      <Project>{44940601-6CC1-3F18-BF7C-A9B7998D9196}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>